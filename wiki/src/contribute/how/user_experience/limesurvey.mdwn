[[!meta title="Survey platform"]]

We have an installation of [LimeSurvey](https://limesurvey.org/) to
create surveys:

<https://survey.tails.boum.org/>

[[!toc]]

Infrastructure
==============

Puppet configuration files:

- [[!tails_gitweb_puppet_tails manifests/limesurvey.pp]]
- [[!tails_gitweb_puppet_tails files/limesurvey/sudo/limesurvey-admin]]

Git repositories:

- *Upstream repo* in <https://github.com/LimeSurvey/LimeSurvey.git>.

- *Updates repo* in */var/lib/limesurvey/* which is synced automatically
  to the *upstream repo*.

- *Production repo* in */var/www/limesurvey* which has the *update repo*
  as origin.

Updating LimeSurvey
===================

1. Log in to the administration interface to identify which version is
   currently installed:

   <https://survey.tails.boum.org/index.php/admin>

1. Read the release notes:

   <https://github.com/LimeSurvey/LimeSurvey/blob/master/docs/release_notes.txt>.

1. Connect to the platform:

       ssh unlehxtgqn5xg6ccxwnm5w3ddcrll5ctlavo7srjvkkpay67dv3sdzyd.onion

1. Update the backup of the database:

       sudo /usr/sbin/backupninja --now --debug --run /etc/backup.d/10.mysql

1. Login as `www-data`:

       sudo -u www-data bash
       cd ~/limesurvey/

1. Save a backup of the custom files in the working directory:

       tar zcvf /tmp/limesurvey-$(date +%Y-%m-%d-%H:%M).tgz application/config/config.php upload

1. Fetch the changes from the *updates repo*:
 
       git fetch origin

1. Check the version number in the *production repo* and the *updates repo*:

       git log master
       git log origin/master

1. Identity the tag to which to update:

       git tag

1. Merge the *updates repo* (or the *upstream* repo) into the
   *production repo*:

       git merge $TAG

   Remove all untracked files:

       git clean -df

   Restore the custom files:

       tar zxvf /tmp/limesurvey-$(date +%Y-%m-%d)-*.tgz

1. Make sure that our local changes are still here:

       git log --no-merges $TAG..

   Should return:

       commit b98a165bbab1d85e8598125995e390f5d664cb5e
       Author: www-data <www-data@survey.lizard>
       Date:   Tue Oct 27 01:24:06 2020 +0000

           Use a more generic message (fundraising#17704)

           We're now using LimeSurvey to send emails to donors.

1. Update the database from either:

   - The command line:

         php application/commands/console.php updatedb

   - The web interface:

     <https://survey.tails.boum.org/index.php/admin/index>

   One might work but not the other.

1. Check the version in the footer of:

   <https://survey.tails.boum.org/index.php/admin/index>

1. Remove the backup of the custom files:

       rm /tmp/limesurvey-*.tgz

<h1 id="delete">Deleting old tables</h1>

When a survey is deactivated in LimeSurvey, the data of the survey (responses
and list of participants) is moved to MySQL tables with the prefix `old_`.

To delete all these tables at once:

1. Connect to the platform:

       ssh unlehxtgqn5xg6ccxwnm5w3ddcrll5ctlavo7srjvkkpay67dv3sdzyd.onion

1. Update the backup of the database:

       sudo /usr/sbin/backupninja --now --debug --run /etc/backup.d/10.mysql

1. Login as `www-data`:

       sudo -u www-data bash

1. Store the MySQL password in a shell variable:

       grep "'password' =>" /var/www/limesurvey/application/config/config.php | sed -r "s/^\s+'password' => '(\w+)',$/\1/"
       export PASSWORD=

1. Delete all tables that have the prefix `old_`:

       echo "show tables like 'old_%';" | mysql --user limesurvey --password=${PASSWORD} --skip-column-names limesurvey | while read table ; do echo "Dropping $table..." ; echo "drop table $table;" | mysql --user limesurvey --password=${PASSWORD} limesurvey ; done

1. Update the backup of the database to overwrite the previous one:

       sudo /usr/sbin/backupninja --now --debug --run /etc/backup.d/10.mysql
