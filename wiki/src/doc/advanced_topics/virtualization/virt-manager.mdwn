[[!meta title="virt-manager"]]

[*virt-manager*](http://virt-manager.org/) is a free software
virtualization solution for Linux. *virt-manager* has a more complex
interface than *VirtualBox* or *GNOME Boxes* but it also has a more
complete set of features.

[[!inline pages="doc/advanced_topics/virtualization.caution" raw="yes" sort="age"]]

<div class="tip">

<p><em>virt-manager</em> is the only virtualization
solution that we present that allows the use of a Persistent
Storage.</span> See [[Running Tails from a USB
image|virt-manager#usb_image]].</p>

</div>

<div class="note">

<p>The following instructions have been tested on Debian 11 (Bullseye).</p>

<p>Please, [[let us know|about/contact#tails-dev]] if they do not apply
to Debian 12 (Bookworm).</p>

</div>

[[!toc]]

Terminology
===========

*virt-manager* is based on a set of lower level virtualization tools,
going from the user interface to the hardware interactions with the
processor. This terminology is a bit confusing and other documentation
might mention the following tools:

  - *KVM* is the module of the Linux kernel that interacts with the
    virtualization features of the processor.
  - *QEMU* is the virtualization software that emulates virtual
    processors and peripherals based on *KVM* and that starts and stops
    virtual machines.
  - *libvirt* is a library that allows *virt-manager* to interact with
    the virtualization capabilities provided by *QEMU*.
  - *SPICE* is a protocol that allows to visualize the desktop of
    virtual machines.
  - *virt-manager* is the graphical interface that allows to create,
    configure, and run virtual machines.

<a id="iso"></a>

Installation
============

To install *virt-manager* in Debian, execute the following
command:

    sudo apt install virt-manager libvirt-daemon-system

To install *virt-manager* in Ubuntu, execute the following
command:

    sudo apt install virt-manager libvirt-bin qemu-kvm

Running Tails from an ISO image
===============================

1. [[Download an ISO image|install/dvd]].

1. Start *virt-manager*.

1. Double-click on **localhost (QEMU)** to connect to the *QEMU*
   system of your host.

1. To create a new virtual machine, choose
   <span class="menuchoice"> <span
   class="guimenu">File</span>&nbsp;▸ <span
   class="guimenuitem">New Virtual Machine</span></span>.

1. In *step 1*, choose **Local install media (ISO image or CDROM)**.

1. In *step 2*:

   - **Choose ISO image**, then **Browse...**, and **Browse Local** to
     browse for the ISO image that you want to start from.

   - Disable **Automatically detected from the installation media / source**.

   - Specify **Debian 10** in the field **Choose the operating system you are installing**.

1. In *step 3*, allocate at least 2048 MB of RAM.

1. In *step 4*, disable storage for this virtual machine.

1. In *step 5*:

   - Type a name of your choice for the new virtual machine.

   - Click **Finish** to start the virtual machine.

<div class="tip">

If you get the error message "<span class="guilabel">Error starting
domain: Requested operation is not valid: network 'default' is not
active</span>", then try to start the default virtual network:

<ol>
<li>Click on <span class="guilabel">localhost (QEMU)</span>.</li>
<li>Choose <span class="menuchoice">
    <span class="guimenu">Edit</span>&nbsp;▸
    <span class="guimenuitem">Connection details</span></span> to
    administer the connection to your local
    <span class="application">QEMU</span> system.</li>
<li>Click on <span class="guilabel">Virtual Networks</span> tab, then
    select the <span class="guilabel">default</span> virtual network in
    the left pane.</li>
<li>Click on the [[!img lib/media-playback-start.png alt="Start Network"
    link=no class=symbolic]] icon on the bottom of the left pane to
    start the default virtual network.</li>
</ol>

</div>

<a id="usb_image"></a>

Running Tails from a USB image
==============================

Running Tails from a USB image is the only virtualization solution that
allows you to use a Persistent Storage in a virtual machine.

1. [[Download a USB image|install/download]] instead of an ISO image.

1. Increase the size of the USB image to be at least 8 GB. This creates
   space for automatic upgrades and the Persistent Storage.

   <p class="pre command">truncate -s
   <span class="command-placeholder">size</span>
   <span class="command-placeholder">tails.img</span></p>

   - <span class="command-placeholder">size</span> has to be at least
     <span class="command">7200M</span>.
   - <span class="command-placeholder">tails.img</span> is the file name
     of the USB image that you want to resize.

1. Start *virt-manager*.

1. Double-click on **localhost (QEMU)** to connect to the *QEMU*
   system of your host.

1. To create a new virtual machine, choose
   <span class="menuchoice"> <span
   class="guimenu">File</span>&nbsp;▸ <span
   class="guimenuitem">New Virtual Machine</span></span>.

1. In *step 1*, choose **Import existing disk image**.

1. In *step 2*:

   - Choose **Browse...**, and **Browse Local** to
   browse for the USB image that you want to start from.

   - Specify **Debian 10** in the field **Choose the operating system you are installing**.

1. In *step 3*, allocate at least 2048 MB of RAM.

1. In *step 4*:

   - Type a name of your choice for the new virtual machine.

   - Choose **Customize configuration before install**.

   - Click **Finish** to open the configuration view.

1. In the configuration view, choose **VirtIO Disk 1** or **IDE Disk 1**

   - Set **Disk bus** to **USB**.

   - Click **Apply**.

   - Expand the **Advanced options**.

   - Enable **Removable**.

   - Click **Apply** again.

   - Click **Begin Installation** in the top left corner to start the virtual machine.

After you start on the USB image, you can [[create a Persistent
Storage|first_steps/persistence]] on it.

<a id="usb"></a>

Running Tails from a USB stick
==============================

To run Tails from a USB stick using *virt-manager*, first
create a virtual machine running from an ISO image as described
[[above|virt-manager#iso]].

Then do the following:

  1. From the virtual machine window, choose
     <span class="menuchoice">
     <span class="guimenu">Virtual Machine</span>&nbsp;▸
     <span class="guisubmenuitem">Shut Down</span>&nbsp;▸
     <span class="guimenuitem">Force Off</span></span> to shut down the
     virtual machine.
  1. Plug in the USB stick from which you want to run Tails.
  1. Choose
     <span class="menuchoice">
     <span class="guimenu">View</span>&nbsp;▸
     <span class="guimenuitem">Details</span></span> to edit the
     configuration of the virtual machine.
  1. Click on the **Add Hardware** button on the bottom of the left
     pane.
  1. Select **USB Host Device** in the left pane.
  1. In the right pane, click on the device from which you want to run
     Tails, and click **Finish**.

You can keep the original ISO image connected as a virtual DVD to
install Tails onto the USB stick if needed.

<a id="disconnect"></a>

You can also disconnect the original ISO image and start directly from the
USB stick once Tails is already installed on it. To do so:

  1. Shut down the virtual machine.
  1. In the configuration of the virtual machine, click on **IDE CDROM
     1** in the left pane.
  1. Click on the **Disconnect** button in the right pane.
  1. To enable the USB stick as a boot option:
     1. Click on **Boot Options** in the left pane.
     1. Select the **USB** boot option corresponding to your USB device.
     1. Click **Apply**.
  1. To start the virtual machine choose
     <span class="menuchoice">
     <span class="guimenu">View</span>&nbsp;▸
     <span class="guimenuitem">Console</span></span> and then
     <span class="menuchoice">
     <span class="guimenu">Virtual Machine</span>&nbsp;▸
     <span class="guimenuitem">Run</span></span>.

After you start on the USB device, you can [[create a Persistent
Storage|first_steps/persistence]] on it.

# Troubleshooting

<a id="graphics-issues"></a>

## Graphics issues

Issues with graphics support in Tails running inside a virtual machine
with *virt-manager* are common. The best solution can vary depending
on the version of the virtualization solution and on the virtual
machine configuration. For example:

 - The *Auto resize VM with window* feature does not work in all
   configurations.
 - The video device that provides optimal graphics performance can be
   different depending on the version of the host operating system.

To troubleshoot such issues:

1. Ensure the virtual machine has a *Spice* display and a *Spice*
   channel configured, as opposed to *VNC* ones.

2. Try various virtual video device models.

   Start with *Virtio* and *QXL* video devices: they generally give
   the best results. If they don't perform well for you, try every
   other video device model.
