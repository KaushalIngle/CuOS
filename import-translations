#!/bin/sh

set -e
set -u

EXCLUDE_LANGS=''
TAILS_PO_DIR='po'
SCRIPT_DIR=$(readlink -f "$(dirname "$0")")
TOR_TRANSLATION_REMOTE='https://git.torproject.org/translation.git'
TOR_TRANSLATION_DIR="$SCRIPT_DIR/tmp/tor-translation"
GIT_IN_TOR_TRANSLATION_DIR="git \
	--work-tree=\"$TOR_TRANSLATION_DIR\" \
	--git-dir=\"$TOR_TRANSLATION_DIR/.git\""

### External libraries
. "$SCRIPT_DIR/config/chroot_local-includes/usr/local/lib/tails-shell-library/po.sh"

lang_is_excluded () {
	local lang="$1"
	echo -n "$EXCLUDE_LANGS" | grep -qs -w "$lang"
}

# Defaults
LANG_DOT_PO_LAYOUT=yes

# Detect which project is in current folder,
# and set parameters accordingly
# shellcheck disable=SC2016
if [ -f 'po/tails.pot' ]; then
	BRANCH='tails-misc_release'
	AFTER_IMPORT='intltool_update_po $(po_languages)'
elif [ -f 'po/onioncircuits.pot' ]; then
	LANG_DOT_PO_LAYOUT=no
	BRANCH='tails-onioncircuits_release'
	AFTER_IMPORT='./setup.py build_i18n && ( cd po && for po in *.po ; do msgmerge --update "$po" onioncircuits.pot ; done )'
elif [ -f 'po/whisperback.pot' ]; then
	BRANCH='whisperback_release'
	AFTER_IMPORT=''
else
	echo "Current folder is not a project known to this script!"
	exit 1
fi

# Clone or update the translation repository
if [ -d "$TOR_TRANSLATION_DIR" ]; then
	eval "$GIT_IN_TOR_TRANSLATION_DIR fetch origin"
else
	mkdir -p "$SCRIPT_DIR/tmp"
	git clone "$TOR_TRANSLATION_REMOTE" "$TOR_TRANSLATION_DIR"
fi

# Checkout the correct branch
eval "$GIT_IN_TOR_TRANSLATION_DIR checkout \"$BRANCH\""
eval "$GIT_IN_TOR_TRANSLATION_DIR reset --hard \"origin/$BRANCH\""

# Ensure we only keep PO files that are still present in the Transifex
# branch we import from.
find "$TAILS_PO_DIR" -name '*.po' -delete

# For each completely translated language, merge it,
# unless it is translated outside Transifex
if [ "$LANG_DOT_PO_LAYOUT" = yes ] ; then
	find "$TOR_TRANSLATION_DIR" -name '*.po' | sort | while read -r po_file; do
		lang=$(basename "$po_file" | tr - _ | sed 's/\.po$//')

		! lang_is_excluded "$lang" || continue
		if [ "$(count_translated_strings < "$po_file")" -lt 1 ]; then
			echo "Skipping $lang, that has no translated strings."
			continue
		fi
		echo "Importing translation for $lang..."
		cp "$po_file" "$TAILS_PO_DIR"
	done
else
	find "$TOR_TRANSLATION_DIR" -name '*.pot' | sort | while read -r po_file; do
		lang=$(basename "$(dirname "$po_file" | tr - _ | sed 's/\.pot$//')")

		! lang_is_excluded "$lang" || continue
		if [ "$(count_translated_strings < "$po_file")" -lt 1 ]; then
			echo "Skipping $lang, that has no translated strings."
			continue
		fi
		echo "Importing translation for $lang..."
		cp "$po_file" "$TAILS_PO_DIR/${lang}.po"
	done
fi

# Update PO files
if [ -n "${AFTER_IMPORT:-}" ]; then
	eval "$AFTER_IMPORT"
fi
